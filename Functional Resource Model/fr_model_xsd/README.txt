This folder contains an XML Schema, which is derived from schema generated from the ecore. 
The schema generated from the ecore contains ecore metadata and ecore types from an ecore.xsd.
IN order to have a 'pure' schema, the ecore information have been stripped and the types
have been converted to XML schema types.

The justification to start from the ecore rather than the from the xsd itself, is
that modelling or references is way easier and straightforward in ecore than in xsd.

TODO: Write an xsl, which does that automatically.

*****************************************************************
Update 25/11/2014

After the discussion with SANA the SemanticDefinition attribute and the TypeDefinition attribute have
been agreed as XML elements. This has been achieved with extended meta data in the ecore:

      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="semantic_definition"/>
      </eAnnotations>

and

      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="type_definition"/>
      </eAnnotations>

Now a problem arises when generating the XSD from the functional_resource.genmodel:
The XML generated by the functional resource model editor does not preserve the order of
semantic_definition and type_definition elements according to the generated XSD.

Currently the workaround to change the generated XSD to match what the editor is generating is used. Fixme!

Other options might be to model the semantic definition and the type definition as childs in the acore, not as attributes.
However, this might complicate a convenient representation in the EEF property pages - TBD. 